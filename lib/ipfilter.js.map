{"version":3,"sources":["../src/ipfilter.js"],"names":[],"mappings":"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","file":"ipfilter.js","sourcesContent":["/*!\n * Express - IP Filter\n * Copyright(c) 2014 Bradley and Montgomery Inc.\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\nvar _ = require('lodash');\nvar iputil = require('ip');\nvar rangeCheck = require('range_check');\nvar IpDeniedError = require('./deniedError');\n\n/**\n * express-ipfilter:\n *\n * IP Filtering middleware;\n *\n * Examples:\n *\n *      var ipfilter = require('ipfilter'),\n *          ips = ['127.0.0.1'];\n *\n *      app.use(ipfilter(ips));\n *\n * Options:\n *\n *  - `mode` whether to deny or grant access to the IPs provided. Defaults to 'deny'.\n *  - `log` console log actions. Defaults to true.\n *  - `errorCode` the HTTP status code to use when denying access. Defaults to 401.\n *  - `errorMessage` the error message to use when denying access. Defaults to 'Unauthorized'.\n *  - 'excluding' routes that should be excluded from ip filtering\n *\n * @param [Array] IP addresses\n * @param {Object} options\n * @api public\n */\nmodule.exports = function ipfilter(ips, opts) {\n  ips = ips || false;\n\n  var logger = function(message){ console.log(message);};\n  var settings = _.defaults( opts || {}, {\n    mode: 'deny',\n    log: true,\n    logF: logger,\n    errorCode: 401,\n    errorMessage: 'Unauthorized',\n    allowPrivateIPs: false,\n    allowForward: false,\n    allowCloudflare: false,\n    allowCodio: false,\n    excluding: []\n  });\n\n  var getClientIp = function(req) {\n    var ipAddress;\n\n    var forwardedIpsStr = '';\n\n    if(settings.allowForward){\n      forwardedIpsStr = req.headers['x-forwarded-for'];\n    }\n\n    //Allow getting cloudflare connecting client IP\n    var cloudFlareConnectingIp = '';\n    if(settings.allowCloudflare){\n      cloudFlareConnectingIp = req.headers['cf-connecting-ip'];\n    }\n\n    //Allow getting codio connecting client IP\n    var codioConnectingIp = '';\n    if(settings.allowCodio){\n      codioConnectingIp = req.headers['x-real-ip'];\n    }\n\n    if (forwardedIpsStr) {\n      var forwardedIps = forwardedIpsStr.split(',');\n      ipAddress = forwardedIps[0];\n    }\n\n    if (!ipAddress) {\n      ipAddress = req.connection.remoteAddress;\n    }\n\n    if(cloudFlareConnectingIp){\n      ipAddress=cloudFlareConnectingIp;\n    }\n\n    if(codioConnectingIp){\n      ipAddress=codioConnectingIp;\n    }\n\n    if(!ipAddress){\n      return '';\n    }\n\n    if(ipAddress.indexOf(':') !== -1 && ipAddress.indexOf('::') === -1){\n      ipAddress = ipAddress.split(':')[0];\n    }\n\n    return ipAddress;\n  };\n\n  var matchClientIp = function(ip){\n    var mode = settings.mode.toLowerCase();\n\n    var result = _.invoke(ips,testIp,ip,mode);\n\n    if(mode === 'allow'){\n      return _.some(result);\n    }else{\n      return _.every(result);\n    }\n  };\n\n  var testIp = function(ip,mode){\n    var constraint = this;\n\n    // Check if it is an array or a string\n    if(typeof constraint === 'string'){\n      if(rangeCheck.validRange(constraint)){\n        return testCidrBlock(ip,constraint,mode);\n      }else{\n        return testExplicitIp(ip,constraint,mode);\n      }\n    }\n\n    if(typeof constraint === 'object'){\n      return testRange(ip,constraint,mode);\n    }\n  };\n\n  var testExplicitIp = function(ip,constraint,mode){\n    if(ip === constraint){\n      return mode === 'allow';\n    }else{\n      return mode === 'deny';\n    }\n  };\n\n  var testCidrBlock = function(ip,constraint,mode){\n    if(rangeCheck.inRange(ip, constraint)){\n      return mode === 'allow';\n    }else{\n      return mode === 'deny';\n    }\n  };\n\n  var testRange = function(ip,constraint,mode){\n    var filteredSet = _.filter(ips,function(constraint){\n      if(constraint.length > 1){\n        var startIp = iputil.toLong(constraint[0]);\n        var endIp = iputil.toLong(constraint[1]);\n        var longIp = iputil.toLong(ip);\n        return  longIp >= startIp && longIp <= endIp;\n      }else{\n        return ip === constraint[0];\n      }\n    });\n\n    if(filteredSet.length > 0){\n      return mode === 'allow';\n    }else{\n      return mode === 'deny';\n    }\n  };\n\n  return function(req, res, next) {\n    if(settings.excluding.length > 0){\n      var results = _.filter(settings.excluding,function(exclude){\n        var regex = new RegExp(exclude);\n        return regex.test(req.url);\n      });\n\n      if(results.length > 0){\n        if(settings.log){\n          logger('Access granted for excluded path: ' + results[0]);\n        }\n        return next();\n      }\n    }\n\n    var ip = getClientIp(req);\n    // If no IPs were specified, skip\n    // this middleware\n    if(!ips || !ips.length) { return next(); }\n\n    if(matchClientIp(ip,req)) {\n      // Grant access\n      if(settings.log) {\n        settings.logF('Access granted to IP address: ' + ip);\n      }\n\n      return next();\n    }\n\n    // Deny access\n    if(settings.log) {\n      settings.logF('Access denied to IP address: ' + ip);\n    }\n\n    var err = new IpDeniedError('Access denied to IP address: ' + ip);\n    return next(err);\n  };\n};\n"]}